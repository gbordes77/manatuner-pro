name: 🔍 PR Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 🚫 Skip draft PRs
  check-draft:
    name: 🚫 Skip Draft
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: ✅ PR is ready for review
        run: echo "PR is ready for validation"

  # 🧪 Comprehensive Testing
  test-suite:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    needs: check-draft
    if: github.event.pull_request.draft == false
    
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 Lint check
        run: npm run lint
        
      - name: 🔧 Type check
        run: npm run type-check
        
      - name: 🧪 Run tests
        run: npm run test:coverage
        
      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.node-version == 18
        with:
          fail_ci_if_error: false
          verbose: true

  # 🏗️ Build Performance
  build-analysis:
    name: 🏗️ Build Analysis
    runs-on: ubuntu-latest
    needs: check-draft
    if: github.event.pull_request.draft == false
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        
      - name: 📊 Analyze bundle size
        run: |
          echo "## 📦 Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "| File | Size | Gzipped |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|---------|" >> $GITHUB_STEP_SUMMARY
          cd dist
          for file in assets/*.js; do
            if [ -f "$file" ]; then
              size=$(du -h "$file" | cut -f1)
              gzipped=$(gzip -c "$file" | wc -c | numfmt --to=iec)
              echo "| $file | $size | $gzipped |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pr-build-${{ github.event.number }}
          path: dist/
          retention-days: 7

  # 🔒 Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    needs: check-draft
    if: github.event.pull_request.draft == false
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: 🔍 Check for vulnerabilities
        run: |
          if npm audit --audit-level=high --json > audit.json 2>/dev/null; then
            echo "✅ No high/critical vulnerabilities found"
          else
            echo "⚠️ High/critical vulnerabilities detected"
            cat audit.json
          fi

  # ✅ All Checks Passed
  validation-complete:
    name: ✅ Validation Complete
    runs-on: ubuntu-latest
    needs: [test-suite, build-analysis, security]
    if: always() && github.event.pull_request.draft == false
    
    steps:
      - name: 🎉 All checks passed
        if: needs.test-suite.result == 'success' && needs.build-analysis.result == 'success' && needs.security.result == 'success'
        run: |
          echo "🎉 All validation checks passed!"
          echo "✅ Tests: Passed"
          echo "✅ Build: Passed" 
          echo "✅ Security: Passed"
          echo "Ready for merge! 🚀"
          
      - name: ❌ Some checks failed
        if: needs.test-suite.result != 'success' || needs.build-analysis.result != 'success' || needs.security.result != 'success'
        run: |
          echo "❌ Some validation checks failed:"
          echo "Tests: ${{ needs.test-suite.result }}"
          echo "Build: ${{ needs.build-analysis.result }}"
          echo "Security: ${{ needs.security.result }}"
          exit 1 