name: Tests Automatiques ManaTuner Pro

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Tests Unitaires et Composants
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Linter et formatage
        run: |
          npm run lint || true
          npm run format:check || true
      
      - name: Tests unitaires
        run: npm run test:unit
      
      - name: Tests de composants
        run: npm run test:component
      
      - name: G√©n√©rer rapport de couverture
        run: npm run test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build-test:
    name: Test de Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Build de production
        run: npm run build
      
      - name: V√©rifier la taille du bundle
        run: |
          du -sh dist/
          find dist/ -name "*.js" -exec ls -lh {} \;

  e2e-tests:
    name: Tests E2E Playwright
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Installer Playwright
        run: npx playwright install --with-deps
      
      - name: Build application
        run: npm run build
      
      - name: Tests E2E - Core Flows
        run: npx playwright test tests/e2e/core-flows/
      
      - name: Tests E2E - Onglets d'analyse
        run: npx playwright test tests/e2e/tabs/
      
      - name: Upload des rapports Playwright
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-e2e
          path: playwright-report/
          retention-days: 30

  responsive-tests:
    name: Tests de Responsivit√©
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Installer Playwright
        run: npx playwright install --with-deps
      
      - name: Build application
        run: npm run build
      
      - name: Tests Responsivit√© Mobile/Desktop
        run: npx playwright test tests/e2e/responsive/
      
      - name: Upload screenshots responsivit√©
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: responsive-screenshots
          path: test-results/
          retention-days: 7

  accessibility-tests:
    name: Tests d'Accessibilit√©
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Installer Playwright
        run: npx playwright install --with-deps
      
      - name: Build application
        run: npm run build
      
      - name: Tests d'accessibilit√© WCAG
        run: npx playwright test tests/e2e/accessibility/
      
      - name: Upload rapport accessibilit√©
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  performance-tests:
    name: Tests de Performance
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Installer Playwright
        run: npx playwright install --with-deps
      
      - name: Build application
        run: npm run build
      
      - name: Tests de performance
        run: npx playwright test tests/e2e/performance/
      
      - name: Upload m√©triques performance
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-metrics
          path: test-results/
          retention-days: 7

  multi-browser-tests:
    name: Tests Multi-Navigateurs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Installer Playwright
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Build application
        run: npm run build
      
      - name: Tests sur ${{ matrix.browser }}
        run: npx playwright test --project=${{ matrix.browser }} tests/e2e/tabs/
      
      - name: Upload rapport ${{ matrix.browser }}
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.browser }}-report
          path: playwright-report/
          retention-days: 7

  security-audit:
    name: Audit de S√©curit√©
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Audit de s√©curit√© npm
        run: npm audit --audit-level=moderate
      
      - name: V√©rification des vuln√©rabilit√©s
        run: |
          npx audit-ci --moderate
          echo "Audit de s√©curit√© termin√©"

  deployment-test:
    name: Test de D√©ploiement
    runs-on: ubuntu-latest
    needs: [unit-tests, build-test, e2e-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Installer les d√©pendances
        run: npm ci
      
      - name: Build de production
        run: npm run build
      
      - name: Test de d√©ploiement (dry-run)
        run: |
          echo "Simulation du d√©ploiement..."
          ls -la dist/
          echo "Taille du build:"
          du -sh dist/
      
      - name: Notification succ√®s
        if: success()
        run: |
          echo "‚úÖ Tous les tests sont pass√©s!"
          echo "‚úÖ Build de production r√©ussi!"
          echo "‚úÖ Pr√™t pour le d√©ploiement!"

  notification:
    name: Notification des R√©sultats
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, responsive-tests, accessibility-tests, performance-tests]
    if: always()
    
    steps:
      - name: Notification √©chec
        if: ${{ contains(needs.*.result, 'failure') }}
        run: |
          echo "‚ùå Certains tests ont √©chou√©!"
          echo "V√©rifiez les rapports dans les artifacts."
      
      - name: Notification succ√®s
        if: ${{ !contains(needs.*.result, 'failure') }}
        run: |
          echo "‚úÖ Tous les tests sont pass√©s avec succ√®s!"
          echo "üöÄ L'application est pr√™te pour la production!"

  cleanup:
    name: Nettoyage
    runs-on: ubuntu-latest
    needs: [notification]
    if: always()
    
    steps:
      - name: Nettoyage des artifacts anciens
        uses: actions/github-script@v7
        with:
          script: |
            const { data: artifacts } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });
            
            console.log(`Nombre d'artifacts: ${artifacts.artifacts.length}`);
            
            // Garder seulement les 5 derniers rapports
            const oldArtifacts = artifacts.artifacts.slice(5);
            
            for (const artifact of oldArtifacts) {
              try {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                });
                console.log(`Artifact supprim√©: ${artifact.name}`);
              } catch (error) {
                console.log(`Erreur lors de la suppression: ${error.message}`);
              }
            } 